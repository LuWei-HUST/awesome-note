FrontEnd主要负责元数据的管理和客户端链接的管理，并且根据元数据信息进行查询的规划和查询的调度。

BackEnd主要负责数据存储及SQL的计算工作。

使用Duplicate Key模型时，如果加载了两条相同的记录，它们将被保留为两条记录，而不是合并为一条记录。
DUPLICATE KEY: key 列相同的记录，同时存在于 StarRocks 中，适合存储明细数据或者数据无聚合特性的业务场景， 数据按 key 列做排序。

StarRocks
查询版本 select current_version();
./fe/bin/start_fe.sh --daemon
cat fe/log/fe.log | grep thrift
./be/bin/start_be.sh --daemon
cat be/log/be.INFO | grep heartbeat

导入csv curl --location-trusted -u root: -H "Expect:100-continue" -H "column_separator:," -H "columns: cdate, val1, val2" -T /home/luwei/code/test/data.csv -XPUT http://127.0.0.1:8030/api/example_db/t5/_stream_load

mysql
启动 sudo systemctl start mysql
状态 systemctl status mysql.service
连接 server sudo mysql -u root
查看表结构 describe tablename

查看jdk安装位置
update-alternatives --list java

修改postgresql密码
sudo systemctl restart postgresql
sudo -u postgres psql
alter user postgres with encrypted password 'postgres';
\q
sudo systemctl restart postgresql
连接数据库 psql -h 127.0.0.1 -p 5432 -U postgres
切换数据库 \c test;
导入csv \copy houseinfo from '/home/luwei/code/HousePriceSpider/data/info20240801222804.csv' delimiter ',';
查看表结构 \d tablename

postgresql
安装完成后
连接数据库
sudo -i -u postgres
psql
查看数据库 \l或\list
创建数据库 CREATE DATABASE test;


clickhouse简介
clickhouse，按照官方的文档，是一个高性能的，适用于联机分析场景（OLAP）的列式数据库管理系统。
什么是OLAP呢？OLAP要求在大型数据集上进行复杂分析型的查询时能够提供实时的响应。一般具有以下几个特征：
    数据量巨大-数十亿或数万亿行
    数据存放于列数很多的宽表之中
    特定的查询通常只会提取部分列
    查询结果需要在秒或毫秒级别内返回，简单的查询需要在50ms以内
    数据插入是大批量的，而非单条单条地插入
    事务特性是非必须的

安装clickhouse
下载二进制文件
curl https://clickhouse.com/ | sh
安装
sudo ./clickhouse install
密码：123456

启动server
sudo clickhouse start
启动client
clickhouse-client --password
查看数据库
SHOW DATABASES;

clickhouse
表引擎（表类型）决定了：
    数据存放在哪里，如何存放，写入到什么位置，从哪里读取
    支持哪些查询，以及如何查询
    并发数据访问
    索引的使用，如果支持索引的话
    是否可以执行多线程请求
    数据副本参数

clickhouse支持以下几种引擎：
    MergeTree
        用于高负载任务的最通用和功能最强大的表引擎。MergeTree是一个引擎族，包含MergeTree等其他多种引擎。
    Log
        提供最小功能集的轻量级引擎。
    Integration Engines
        用于与其他数据存储和处理系统通信的引擎。
    Special Engines
    
    MergeTree



StarRocks是doris的一个分支演进的

Prometheus 是一个开源的服务监控系统和时序数据库，其提供了通用的数据模型和快捷数据采集、存储和查询接口。它的核心组件Prometheus server会定期从静态配置的监控目标或者基于服务发现自动配置的自标中进行拉取数据，当新拉取到的数据大于配置的内存缓存区时，数据就会持久化到存储设备当中